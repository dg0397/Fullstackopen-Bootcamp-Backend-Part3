{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/SinglePerson.jsx","components/Persons.jsx","components/Notification.jsx","services/person.js","App.js","index.js"],"names":["Filter","searchValue","handleSearch","value","onChange","PersonForm","handleSubmit","handleNumberInput","handleNameInput","newName","newNumber","className","onSubmit","required","type","SinglePerson","person","handleDelete","name","number","onClick","Persons","peopleToShow","handleDeletePerson","map","id","Notification","message","style","includes","backgroundColor","boxShadow","baseUrl","services","getAll","axios","get","then","response","data","update","newPerson","put","create","post","deletePerson","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchValue","setPeopleToShow","notification","setNotification","useEffect","personService","e","target","filter","RegExp","test","preventDefault","alert","window","confirm","find","changedPerson","retornedPerson","setTimeout","catch","error","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efce34dd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ searchValue, handleSearch }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n      Filter Show with:  \r\n      <input value={searchValue} onChange={handleSearch} />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  handleSubmit,\r\n  handleNumberInput,\r\n  handleNameInput,\r\n  newName,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <div className=\"person-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameInput} required />\r\n        </div>\r\n        <div>\r\n          number:{\" \"}\r\n          <input value={newNumber} onChange={handleNumberInput} required />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst SinglePerson = ({ person,handleDelete }) => {\r\n  const { name, number } = person;\r\n  return (\r\n    <p>\r\n      {name} {number}\r\n      <button onClick = {handleDelete} >Delete</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SinglePerson;\r\n","import React from \"react\";\r\nimport SinglePerson from \"./SinglePerson\";\r\n\r\nconst Persons = ({ peopleToShow,handleDeletePerson }) => {\r\n  return (\r\n    <div className = \"person-list\">\r\n      {peopleToShow.map((person) => {\r\n        return <SinglePerson key={person.id} person={person} handleDelete = {()=> handleDeletePerson(person.id)} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(!message) return null;\r\n    const redNotificarion = {\r\n        backgroundColor : '#c42e1a',\r\n        boxShadow: \"5px 5px 5px #c42e1a\"\r\n    }\r\n    return (\r\n        <div className = \"notification\" style={message.includes('deleted')?redNotificarion : null} >\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newPerson) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newPerson)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n    return axios\r\n            .delete(`${baseUrl}/${id}`)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst services = {\r\n    getAll,\r\n    update,\r\n    create,\r\n    deletePerson\r\n}\r\n\r\nexport default services\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nimport personService from \"./services/person\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [peopleToShow, setPeopleToShow] = useState([]);\r\n  const [notification, setNotification] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //Get all the persons from the server\r\n    personService.getAll().then((data) => {\r\n      setPersons(data);\r\n      setPeopleToShow(data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setPeopleToShow(persons);\r\n    } else {\r\n      setPeopleToShow(() =>\r\n        persons.filter((person) => {\r\n          const regex = new RegExp(e.target.value, \"gi\");\r\n          return regex.test(person.name);\r\n        })\r\n      );\r\n    }\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      persons.map((person) => person.name).includes(newName) &&\r\n      persons.map((person) => person.number).includes(newNumber)\r\n    ) {\r\n      alert(`${newName} is already added to phonebook`);\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    } else if (persons.map((person) => person.name).includes(newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        //updating a person number\r\n        const person = persons.find((person) => person.name === newName);\r\n        const changedPerson = { ...person, number: newNumber };\r\n        personService\r\n          .update(changedPerson.id, changedPerson)\r\n          .then((retornedPerson) => {\r\n            setNotification(`Updated ${newName} number`);\r\n            setTimeout(() => {\r\n              setNotification(\"\");\r\n            }, 5000);\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== retornedPerson.id ? person : retornedPerson\r\n              )\r\n            );\r\n            setPeopleToShow(\r\n              persons.map((person) =>\r\n                person.id !== retornedPerson.id ? person : retornedPerson\r\n              )\r\n            );\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          })\r\n          .catch((error) => {\r\n            setNotification(\r\n              `Information of ${changedPerson.name} has already deleted from the server`\r\n            );\r\n            setTimeout(() => {\r\n              setNotification(\"\");\r\n            }, 5000);\r\n            setPersons(\r\n              persons.filter((person) => person.id !== changedPerson.id)\r\n            );\r\n            setPeopleToShow(\r\n              persons.filter((person) => person.id !== changedPerson.id)\r\n            );\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          });\r\n      }\r\n    } else {\r\n      const person = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      //create a new Person and send the data to the server\r\n      personService.create(person).then((retornedPerson) => {\r\n        setNotification(`Added ${newName}`);\r\n        setTimeout(() => {\r\n          setNotification(\"\");\r\n        }, 5000);\r\n        setPersons(persons.concat(retornedPerson));\r\n        setPeopleToShow(persons.concat(retornedPerson));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeletePerson = (id) => {\r\n    if (\r\n      window.confirm(\r\n        `Delete ${peopleToShow.find((person) => person.id === id).name}`\r\n      )\r\n    ) {\r\n      //delete a person\r\n      personService\r\n        .deletePerson(id)\r\n        .then((response) => {\r\n          console.log(response);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          setPeopleToShow(persons.filter((person) => person.id !== id));\r\n        })\r\n        .catch((error) => {\r\n          setNotification(\r\n            `Information of ${\r\n              peopleToShow.find((person) => person.id === id).name\r\n            } has already deleted from the server`\r\n          );\r\n          setTimeout(() => {\r\n            setNotification(\"\");\r\n          }, 5000);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          setPeopleToShow(persons.filter((person) => person.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleNameInput = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberInput = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-content\">\r\n        <h1>Phonebook</h1>\r\n        <Notification message={notification} />\r\n        <Filter searchValue={searchValue} handleSearch={handleSearch} />\r\n        <h2>Add a New</h2>\r\n        <PersonForm\r\n          handleSubmit={handleSubmit}\r\n          handleNumberInput={handleNumberInput}\r\n          handleNameInput={handleNameInput}\r\n          newName={newName}\r\n          newNumber={newNumber}\r\n        />\r\n        <h2>Numbers</h2>\r\n        <Persons\r\n          peopleToShow={peopleToShow}\r\n          handleDeletePerson={handleDeletePerson}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}