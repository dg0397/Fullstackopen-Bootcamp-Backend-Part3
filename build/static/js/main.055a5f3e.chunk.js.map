{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/SinglePerson.jsx","components/Persons.jsx","components/Notification.jsx","services/person.js","App.js","index.js"],"names":["Filter","searchValue","handleSearch","value","onChange","PersonForm","handleSubmit","handleNumberInput","handleNameInput","newName","newNumber","className","onSubmit","required","type","SinglePerson","person","handleDelete","name","number","onClick","Persons","peopleToShow","handleDeletePerson","map","id","Notification","message","condition","includes","style","backgroundColor","boxShadow","baseUrl","services","getAll","axios","get","then","response","data","update","newPerson","put","create","post","deletePerson","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchValue","setPeopleToShow","notification","setNotification","useEffect","personService","e","target","filter","RegExp","test","preventDefault","alert","window","confirm","find","changedPerson","retornedPerson","setTimeout","catch","error","status","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.055a5f3e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ searchValue, handleSearch }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n      Filter Show with:  \r\n      <input value={searchValue} onChange={handleSearch} />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  handleSubmit,\r\n  handleNumberInput,\r\n  handleNameInput,\r\n  newName,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <div className=\"person-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameInput} required />\r\n        </div>\r\n        <div>\r\n          number:{\" \"}\r\n          <input value={newNumber} onChange={handleNumberInput} required />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst SinglePerson = ({ person,handleDelete }) => {\r\n  const { name, number } = person;\r\n  return (\r\n    <p>\r\n      {name} {number}\r\n      <button onClick = {handleDelete} >Delete</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SinglePerson;\r\n","import React from \"react\";\r\nimport SinglePerson from \"./SinglePerson\";\r\n\r\nconst Persons = ({ peopleToShow,handleDeletePerson }) => {\r\n  return (\r\n    <div className = \"person-list\">\r\n      {peopleToShow.map((person) => {\r\n        return <SinglePerson key={person.id} person={person} handleDelete = {()=> handleDeletePerson(person.id)} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(!message) return null;\r\n    const redNotificarion = {\r\n        backgroundColor : '#c42e1a',\r\n        boxShadow: \"5px 5px 5px #c42e1a\"\r\n    }\r\n    const condition = message.includes(\"deleted from the server\") | message.includes(\"Validation failed\")\r\n    return (\r\n        <div className = \"notification\" style={condition?redNotificarion : null} >\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newPerson) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newPerson)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n    return axios\r\n            .delete(`${baseUrl}/${id}`)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst services = {\r\n    getAll,\r\n    update,\r\n    create,\r\n    deletePerson\r\n}\r\n\r\nexport default services\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nimport personService from \"./services/person\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [peopleToShow, setPeopleToShow] = useState([]);\r\n  const [notification, setNotification] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //Get all the persons from the server\r\n    personService.getAll().then((data) => {\r\n      setPersons(data);\r\n      setPeopleToShow(data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setPeopleToShow(persons);\r\n    } else {\r\n      setPeopleToShow(() =>\r\n        persons.filter((person) => {\r\n          const regex = new RegExp(e.target.value, \"gi\");\r\n          return regex.test(person.name);\r\n        })\r\n      );\r\n    }\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      persons.map((person) => person.name).includes(newName) &&\r\n      persons.map((person) => person.number).includes(newNumber)\r\n    ) {\r\n      alert(`${newName} is already added to phonebook`);\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    } else if (persons.map((person) => person.name).includes(newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        //updating a person number\r\n        const person = persons.find((person) => person.name === newName);\r\n        const changedPerson = { ...person, number: newNumber };\r\n        personService\r\n          .update(changedPerson.id, changedPerson)\r\n          .then((retornedPerson) => {\r\n            setNotification(`Updated ${newName} number`);\r\n            setTimeout(() => {\r\n              setNotification(\"\");\r\n            }, 5000);\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== retornedPerson.id ? person : retornedPerson\r\n              )\r\n            );\r\n            setPeopleToShow(\r\n              persons.map((person) =>\r\n                person.id !== retornedPerson.id ? person : retornedPerson\r\n              )\r\n            );\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 400) {\r\n              setNotification(\r\n                `Validation failed: The phone number must have at least 8 digits`\r\n              );\r\n              setTimeout(() => {\r\n                setNotification(\"\");\r\n              }, 5000);\r\n            } else {\r\n              setNotification(\r\n                `Information of ${changedPerson.name} has already deleted from the server`\r\n              );\r\n              setTimeout(() => {\r\n                setNotification(\"\");\r\n              }, 5000);\r\n              setPersons(\r\n                persons.filter((person) => person.id !== changedPerson.id)\r\n              );\r\n              setPeopleToShow(\r\n                persons.filter((person) => person.id !== changedPerson.id)\r\n              );\r\n              setNewName(\"\");\r\n              setNewNumber(\"\");\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      const person = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      //create a new Person and send the data to the server\r\n      personService\r\n        .create(person)\r\n        .then((retornedPerson) => {\r\n          setNotification(`Added ${newName}`);\r\n          setTimeout(() => {\r\n            setNotification(\"\");\r\n          }, 5000);\r\n          setPersons(persons.concat(retornedPerson));\r\n          setPeopleToShow(persons.concat(retornedPerson));\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch((error) => {\r\n          if(error.response.status === 400){\r\n            setNotification(\r\n              `Validation failed: The phone number must have at least 8 digits and Name has to be at least 3 characters long`\r\n            );\r\n            setTimeout(() => {\r\n              setNotification(\"\");\r\n            }, 5000);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDeletePerson = (id) => {\r\n    if (\r\n      window.confirm(\r\n        `Delete ${peopleToShow.find((person) => person.id === id).name}`\r\n      )\r\n    ) {\r\n      //delete a person\r\n      personService\r\n        .deletePerson(id)\r\n        .then((response) => {\r\n          setNotification(\r\n            `${\r\n              peopleToShow.find((person) => person.id === id).name\r\n            } was deleted succesfully`\r\n          );\r\n          setTimeout(() => {\r\n            setNotification(\"\");\r\n          }, 5000);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          setPeopleToShow(persons.filter((person) => person.id !== id));\r\n        })\r\n        .catch((error) => {\r\n          setNotification(\r\n            `Information of ${\r\n              peopleToShow.find((person) => person.id === id).name\r\n            } has already deleted from the server`\r\n          );\r\n          setTimeout(() => {\r\n            setNotification(\"\");\r\n          }, 5000);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          setPeopleToShow(persons.filter((person) => person.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleNameInput = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberInput = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-content\">\r\n        <h1>Phonebook</h1>\r\n        <Notification message={notification} />\r\n        <Filter searchValue={searchValue} handleSearch={handleSearch} />\r\n        <h2>Add a New</h2>\r\n        <PersonForm\r\n          handleSubmit={handleSubmit}\r\n          handleNumberInput={handleNumberInput}\r\n          handleNameInput={handleNameInput}\r\n          newName={newName}\r\n          newNumber={newNumber}\r\n        />\r\n        <h2>Numbers</h2>\r\n        <Persons\r\n          peopleToShow={peopleToShow}\r\n          handleDeletePerson={handleDeletePerson}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}